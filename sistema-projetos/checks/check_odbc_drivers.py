"""
Script para verificar drivers ODBC dispon√≠veis
Execute: python check_odbc_drivers.py
"""

import pyodbc
import sys

def check_odbc_drivers():
    """Verificar drivers ODBC dispon√≠veis no sistema"""
    print("üîç Verificando drivers ODBC dispon√≠veis...")
    print("=" * 50)
    
    drivers = pyodbc.drivers()
    
    if not drivers:
        print("‚ùå Nenhum driver ODBC encontrado!")
        print("\nüí° SOLU√á√ÉO:")
        print("1. Instale o ODBC Driver 17 for SQL Server")
        print("2. URL: https://docs.microsoft.com/en-us/sql/connect/odbc/download-odbc-driver-for-sql-server")
        return False
    
    print(f"üì¶ Encontrados {len(drivers)} drivers:")
    print("-" * 30)
    
    sql_server_drivers = []
    
    for driver in drivers:
        if "SQL Server" in driver:
            sql_server_drivers.append(driver)
            print(f"‚úÖ {driver}")
        else:
            print(f"üìå {driver}")
    
    print("\n" + "=" * 50)
    
    if sql_server_drivers:
        print(f"üéØ Drivers SQL Server encontrados: {len(sql_server_drivers)}")
        
        # Testar qual √© o melhor
        print("\nüß™ Testando compatibilidade:")
        
        recommended_order = [
            "ODBC Driver 17 for SQL Server",
            "ODBC Driver 13 for SQL Server", 
            "ODBC Driver 11 for SQL Server",
            "SQL Server Native Client 11.0",
            "SQL Server"
        ]
        
        best_driver = None
        for rec_driver in recommended_order:
            if rec_driver in sql_server_drivers:
                best_driver = rec_driver
                print(f"üèÜ RECOMENDADO: {rec_driver}")
                break
        
        if not best_driver:
            best_driver = sql_server_drivers[0]
            print(f"‚ö†Ô∏è USANDO: {best_driver} (n√£o √© o ideal)")
        
        print(f"\n‚úÖ Driver que ser√° usado: {best_driver}")
        return True, best_driver
    else:
        print("‚ùå Nenhum driver SQL Server encontrado!")
        print("\nüí° INSTALE:")
        print("- ODBC Driver 17 for SQL Server (RECOMENDADO)")
        print("- Compat√≠vel com SQL Server 2014")
        return False, None

def test_connection_with_driver(driver_name):
    """Testar conex√£o com um driver espec√≠fico"""
    print(f"\nüîå Testando conex√£o com {driver_name}...")
    
    # Credenciais de teste (substitua pelos seus dados)
    server = "52.234.210.220"
    database = "jira_bi"
    username = "marcos.araujo"
    password = "Pwb$f592.MaJ"
    
    connection_string = (
        f"DRIVER={{{driver_name}}};"
        f"SERVER={server};"
        f"DATABASE={database};"
        f"UID={username};"
        f"PWD={password};"
        f"TrustServerCertificate=yes;"
        f"Connection Timeout=10;"
    )
    
    try:
        conn = pyodbc.connect(connection_string)
        cursor = conn.cursor()
        cursor.execute("SELECT 1 as test")
        result = cursor.fetchone()
        conn.close()
        
        print("‚úÖ CONEX√ÉO BEM-SUCEDIDA!")
        print(f"   Driver: {driver_name}")
        print(f"   Servidor: {server}")
        print(f"   Database: {database}")
        return True
        
    except Exception as e:
        print(f"‚ùå ERRO NA CONEX√ÉO: {str(e)}")
        return False

def download_odbc_driver():
    """Instru√ß√µes para baixar o driver ODBC"""
    print("\nüì• COMO INSTALAR O ODBC DRIVER 17:")
    print("=" * 40)
    print("1. Acesse: https://docs.microsoft.com/en-us/sql/connect/odbc/download-odbc-driver-for-sql-server")
    print("2. Baixe: 'ODBC Driver 17 for SQL Server'")
    print("3. Execute como Administrador")
    print("4. Reinicie o computador")
    print("5. Execute este script novamente")
    
    print("\nüîó LINK DIRETO PARA DOWNLOAD:")
    print("https://go.microsoft.com/fwlink/?linkid=2249006")

def main():
    """Fun√ß√£o principal"""
    print("üöÄ Verificador de Drivers ODBC - Sistema de Projetos")
    print("=" * 60)
    
    # Verificar drivers
    result = check_odbc_drivers()
    
    if isinstance(result, tuple) and result[0]:
        success, best_driver = result
        
        # Testar conex√£o com o melhor driver
        print("\n" + "=" * 60)
        connection_ok = test_connection_with_driver(best_driver)
        
        if connection_ok:
            print("\nüéâ TUDO CONFIGURADO CORRETAMENTE!")
            print("‚úÖ Voc√™ pode executar: python app.py")
        else:
            print("\n‚ö†Ô∏è DRIVER OK, MAS CONEX√ÉO FALHOU")
            print("Verifique:")
            print("- IP do servidor est√° correto")
            print("- Usu√°rio e senha est√£o corretos") 
            print("- Firewall/rede permite conex√£o")
            print("- SQL Server est√° rodando")
    else:
        print("\n‚ùå PRECISA INSTALAR DRIVER ODBC")
        download_odbc_driver()
    
    print("\n" + "=" * 60)

if __name__ == "__main__":
    main()
    input("\nPressione Enter para sair...")